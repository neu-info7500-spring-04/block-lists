{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manu\\\\Documents\\\\Sushma\\\\crypto\\\\newclient\\\\src\\\\BlocksComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useQuery, gql, useLazyQuery } from '@apollo/client';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 50;\n\n// Define the blocks query\nconst GET_BLOCKS = gql`\n  query GetBlocks {\n    bitcoin {\n      blocks(any: {date: {after: \"2024-02-18T17:14:50+0000\"}}) {\n        height\n        blockSize\n        transactionCount\n        timestamp {\n        iso8601\n      }\n      }\n    }\n  }\n`;\n\n// Define the transactions query\nconst GET_TRANSACTIONS = gql`\n  query GetTransactions($gteq: Int!, $lteq: Int!) {\n    bitcoin {\n      transactions {\n        block(height: {gteq: $gteq, lteq: $lteq}) {\n          height\n        }\n        feeValue\n        txSize\n      }\n    }\n  }\n`;\n\n// Define the structure of a block and transaction\n\n// Adjust the expected structure of the data to match your queries\n\nconst BlocksComponent = () => {\n  _s();\n  var _dataTransactions$bit, _dataBlocks$bitcoin$b4, _dataBlocks$bitcoin2;\n  const [currentPage, setCurrentPage] = useState(0);\n  const {\n    loading: loadingBlocks,\n    error: errorBlocks,\n    data: dataBlocks\n  } = useQuery(GET_BLOCKS);\n  const [getTransactions, {\n    called,\n    loading: loadingTransactions,\n    data: dataTransactions\n  }] = useLazyQuery(GET_TRANSACTIONS, {\n    fetchPolicy: \"cache-and-network\"\n  });\n  const pageCount = dataBlocks ? Math.ceil(dataBlocks.bitcoin.blocks.length / PAGE_SIZE) : 0;\n  const formatTimestamp = isoString => {\n    // Replace 'T' with a space and remove 'Z'\n    return isoString.replace('T', ' ').replace('Z', '');\n  };\n  useEffect(() => {\n    var _dataBlocks$bitcoin, _dataBlocks$bitcoin$b;\n    if (dataBlocks !== null && dataBlocks !== void 0 && (_dataBlocks$bitcoin = dataBlocks.bitcoin) !== null && _dataBlocks$bitcoin !== void 0 && (_dataBlocks$bitcoin$b = _dataBlocks$bitcoin.blocks) !== null && _dataBlocks$bitcoin$b !== void 0 && _dataBlocks$bitcoin$b.length) {\n      var _dataBlocks$bitcoin$b2, _dataBlocks$bitcoin$b3;\n      // Ensure we have at least 20 blocks, otherwise adjust the logic based on available blocks\n      const minHeight = (_dataBlocks$bitcoin$b2 = dataBlocks.bitcoin.blocks[0]) === null || _dataBlocks$bitcoin$b2 === void 0 ? void 0 : _dataBlocks$bitcoin$b2.height;\n      const maxHeightIndex = Math.min(dataBlocks.bitcoin.blocks.length, 20) - 1;\n      const maxHeight = (_dataBlocks$bitcoin$b3 = dataBlocks.bitcoin.blocks[maxHeightIndex]) === null || _dataBlocks$bitcoin$b3 === void 0 ? void 0 : _dataBlocks$bitcoin$b3.height;\n      if (minHeight !== undefined && maxHeight !== undefined) {\n        getTransactions({\n          variables: {\n            gteq: minHeight,\n            lteq: maxHeight\n          }\n        });\n      }\n    }\n  }, [dataBlocks, getTransactions]);\n  if (loadingBlocks || !called || loadingTransactions) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 65\n  }, this);\n  if (errorBlocks) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", errorBlocks.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 29\n  }, this);\n  if (!(dataTransactions !== null && dataTransactions !== void 0 && (_dataTransactions$bit = dataTransactions.bitcoin) !== null && _dataTransactions$bit !== void 0 && _dataTransactions$bit.transactions)) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No transaction data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 58\n  }, this);\n  const mergedData = (_dataBlocks$bitcoin$b4 = dataBlocks === null || dataBlocks === void 0 ? void 0 : (_dataBlocks$bitcoin2 = dataBlocks.bitcoin) === null || _dataBlocks$bitcoin2 === void 0 ? void 0 : _dataBlocks$bitcoin2.blocks.map(block => {\n    var _dataTransactions$bit2, _transactionData$feeV, _transactionData$txSi;\n    const transactionData = dataTransactions === null || dataTransactions === void 0 ? void 0 : (_dataTransactions$bit2 = dataTransactions.bitcoin) === null || _dataTransactions$bit2 === void 0 ? void 0 : _dataTransactions$bit2.transactions.find(tx => tx.block.height === block.height);\n    return {\n      ...block,\n      feeValue: (_transactionData$feeV = transactionData === null || transactionData === void 0 ? void 0 : transactionData.feeValue) !== null && _transactionData$feeV !== void 0 ? _transactionData$feeV : 'N/A',\n      txSize: (_transactionData$txSi = transactionData === null || transactionData === void 0 ? void 0 : transactionData.txSize) !== null && _transactionData$txSi !== void 0 ? _transactionData$txSi : 'N/A'\n    };\n  })) !== null && _dataBlocks$bitcoin$b4 !== void 0 ? _dataBlocks$bitcoin$b4 : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Height\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Block Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Transaction Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Fee Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Transaction Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: mergedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tr\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td\",\n            children: item.height\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td\",\n            children: item.blockSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td\",\n            children: item.transactionCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td\",\n            children: item.feeValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td\",\n            children: item.txSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td\",\n            children: formatTimestamp(item.timestamp.iso8601)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(BlocksComponent, \"bY8t/UF8crEGy79X6H//+n0+4XY=\", false, function () {\n  return [useQuery, useLazyQuery];\n});\n_c = BlocksComponent;\nexport default BlocksComponent;\nvar _c;\n$RefreshReg$(_c, \"BlocksComponent\");","map":{"version":3,"names":["React","useEffect","useState","useQuery","gql","useLazyQuery","jsxDEV","_jsxDEV","PAGE_SIZE","GET_BLOCKS","GET_TRANSACTIONS","BlocksComponent","_s","_dataTransactions$bit","_dataBlocks$bitcoin$b4","_dataBlocks$bitcoin2","currentPage","setCurrentPage","loading","loadingBlocks","error","errorBlocks","data","dataBlocks","getTransactions","called","loadingTransactions","dataTransactions","fetchPolicy","pageCount","Math","ceil","bitcoin","blocks","length","formatTimestamp","isoString","replace","_dataBlocks$bitcoin","_dataBlocks$bitcoin$b","_dataBlocks$bitcoin$b2","_dataBlocks$bitcoin$b3","minHeight","height","maxHeightIndex","min","maxHeight","undefined","variables","gteq","lteq","children","fileName","_jsxFileName","lineNumber","columnNumber","message","transactions","mergedData","map","block","_dataTransactions$bit2","_transactionData$feeV","_transactionData$txSi","transactionData","find","tx","feeValue","txSize","className","item","index","blockSize","transactionCount","timestamp","iso8601","_c","$RefreshReg$"],"sources":["C:/Users/Manu/Documents/Sushma/crypto/newclient/src/BlocksComponent.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useQuery, gql, useLazyQuery } from '@apollo/client';\r\nimport './styles.css'\r\n\r\nconst PAGE_SIZE = 50; \r\n\r\n// Define the blocks query\r\nconst GET_BLOCKS = gql`\r\n  query GetBlocks {\r\n    bitcoin {\r\n      blocks(any: {date: {after: \"2024-02-18T17:14:50+0000\"}}) {\r\n        height\r\n        blockSize\r\n        transactionCount\r\n        timestamp {\r\n        iso8601\r\n      }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// Define the transactions query\r\nconst GET_TRANSACTIONS = gql`\r\n  query GetTransactions($gteq: Int!, $lteq: Int!) {\r\n    bitcoin {\r\n      transactions {\r\n        block(height: {gteq: $gteq, lteq: $lteq}) {\r\n          height\r\n        }\r\n        feeValue\r\n        txSize\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n// Define the structure of a block and transaction\r\ntype Block = {\r\n    height: number;\r\n    blockSize: number;\r\n    transactionCount: number;\r\n    timestamp: {\r\n        iso8601: string;\r\n    };\r\n \r\n};\r\n\r\ntype Transaction = {\r\n    block: { height: number };\r\n    feeValue: number;\r\n    txSize: number;\r\n};\r\n\r\n// Adjust the expected structure of the data to match your queries\r\ntype BlocksData = {\r\n    bitcoin: {\r\n        blocks: Block[];\r\n    };\r\n};\r\n\r\ntype TransactionsData = {\r\n    bitcoin: {\r\n        transactions: Transaction[];\r\n    };\r\n};\r\n\r\ntype MergedBlockData = Block & {\r\n    feeValue?: number | 'N/A';\r\n    txSize?: number | 'N/A';\r\n};\r\n\r\nconst BlocksComponent: React.FC = () => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const { loading: loadingBlocks, error: errorBlocks, data: dataBlocks } = useQuery<BlocksData>(GET_BLOCKS);\r\n    const [getTransactions, { called, loading: loadingTransactions, data: dataTransactions }] = useLazyQuery<TransactionsData>(GET_TRANSACTIONS, {\r\n        fetchPolicy: \"cache-and-network\"\r\n    });\r\n    const pageCount = dataBlocks ? Math.ceil(dataBlocks.bitcoin.blocks.length / PAGE_SIZE) : 0;\r\n\r\n    const formatTimestamp = (isoString: string) => {\r\n        // Replace 'T' with a space and remove 'Z'\r\n        return isoString.replace('T', ' ').replace('Z', '');\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (dataBlocks?.bitcoin?.blocks?.length) {\r\n            // Ensure we have at least 20 blocks, otherwise adjust the logic based on available blocks\r\n            const minHeight = dataBlocks.bitcoin.blocks[0]?.height;\r\n            const maxHeightIndex = Math.min(dataBlocks.bitcoin.blocks.length, 20) - 1;\r\n            const maxHeight = dataBlocks.bitcoin.blocks[maxHeightIndex]?.height;\r\n\r\n            if (minHeight !== undefined && maxHeight !== undefined) {\r\n                getTransactions({ variables: { gteq: minHeight, lteq: maxHeight } });\r\n            }\r\n        }\r\n    }, [dataBlocks, getTransactions]);\r\n\r\n    if (loadingBlocks || !called || loadingTransactions) return <p>Loading...</p>;\r\n    if (errorBlocks) return <p>Error: {errorBlocks.message}</p>;\r\n    if (!dataTransactions?.bitcoin?.transactions) return <p>No transaction data available</p>;\r\n\r\n    const mergedData: MergedBlockData[] = dataBlocks?.bitcoin?.blocks.map(block => {\r\n        const transactionData = dataTransactions?.bitcoin?.transactions.find(tx => tx.block.height === block.height);\r\n        return {\r\n            ...block,\r\n            feeValue: transactionData?.feeValue ?? 'N/A',\r\n            txSize: transactionData?.txSize ?? 'N/A',\r\n        };\r\n    }) ?? [];\r\n\r\n    return (\r\n        <div className=\"table-container\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"th\">Height</th>\r\n                        <th className=\"th\">Block Size</th>\r\n                        <th className=\"th\">Transaction Count</th>\r\n                        <th className=\"th\">Fee Value</th>\r\n                        <th className=\"th\">Transaction Size</th>\r\n                        <th className=\"th\">Time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {mergedData.map((item, index) => (\r\n                        <tr className=\"tr\" key={index}>\r\n                            <td className=\"td\">{item.height}</td>\r\n                            <td className=\"td\">{item.blockSize}</td>\r\n                            <td className=\"td\">{item.transactionCount}</td>\r\n                            <td className=\"td\">{item.feeValue}</td>\r\n                            <td className=\"td\">{item.txSize}</td>\r\n                            <td className=\"td\">{formatTimestamp(item.timestamp.iso8601)}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n                </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlocksComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}