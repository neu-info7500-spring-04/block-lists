{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manu\\\\Documents\\\\Sushma\\\\crypto\\\\newclient\\\\src\\\\BlocksComponent.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_BLOCKS = gql`\n  query MyQuery {\n  bitcoin {\n    blocks(any: {date: {after: \"2024-02-18T17:14:50+0000\"}}) {\n      height\n      blockSize\n      transactionCount\n    }\n  }\n}\n`;\nconst BlocksComponent = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_BLOCKS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.bitcoin.blocks.map(block => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: block.blockHash\n    }, block.blockHash, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(BlocksComponent, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = BlocksComponent;\nexport default BlocksComponent;\nvar _c;\n$RefreshReg$(_c, \"BlocksComponent\");","map":{"version":3,"names":["React","useQuery","gql","jsxDEV","_jsxDEV","GET_BLOCKS","BlocksComponent","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","bitcoin","blocks","map","block","blockHash","_c","$RefreshReg$"],"sources":["C:/Users/Manu/Documents/Sushma/crypto/newclient/src/BlocksComponent.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\nconst GET_BLOCKS = gql`\r\n  query MyQuery {\r\n  bitcoin {\r\n    blocks(any: {date: {after: \"2024-02-18T17:14:50+0000\"}}) {\r\n      height\r\n      blockSize\r\n      transactionCount\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst BlocksComponent: React.FC = () => {\r\n    const { loading, error, data } = useQuery(GET_BLOCKS);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error: {error.message}</p>;\r\n\r\n    return (\r\n        <ul>\r\n            {data.bitcoin.blocks.map((block: any) => (\r\n                <li key={block.blockHash}>{block.blockHash}</li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default BlocksComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGH,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAACI,UAAU,CAAC;EAErD,IAAIG,OAAO,EAAE,oBAAOJ,OAAA;IAAAO,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIN,KAAK,EAAE,oBAAOL,OAAA;IAAAO,QAAA,GAAG,SAAO,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE/C,oBACIX,OAAA;IAAAO,QAAA,EACKD,IAAI,CAACO,OAAO,CAACC,MAAM,CAACC,GAAG,CAAEC,KAAU,iBAChChB,OAAA;MAAAO,QAAA,EAA2BS,KAAK,CAACC;IAAS,GAAjCD,KAAK,CAACC,SAAS;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb,CAAC;AAACR,EAAA,CAbID,eAAyB;EAAA,QACML,QAAQ;AAAA;AAAAqB,EAAA,GADvChB,eAAyB;AAe/B,eAAeA,eAAe;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}