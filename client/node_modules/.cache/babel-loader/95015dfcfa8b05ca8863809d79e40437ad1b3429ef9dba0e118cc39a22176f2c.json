{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manu\\\\Documents\\\\Sushma\\\\crypto\\\\client\\\\src\\\\BlocksComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useQuery, gql, useLazyQuery } from '@apollo/client';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 20;\n\n// Function to calculate the datetime string for 8 hours ago\n/*const eightHoursAgo = () => {\r\n    const now = new Date(); // Current time\r\n    const eightHoursAgo = new Date(now.getTime() - 8 * 60 * 60 * 1000); // Subtract 8 hours\r\n    return eightHoursAgo.toISOString();\r\n};*/\n\n// Define the blocks query\nconst GET_BLOCKS = gql`\n  query GetBlocks {\n    bitcoin {\n      blocks(date: {between: [\"2024-02-18T00:00:00+0000\", \"2024-02-19T00:00:00+0000\"]}) {\n        height\n        blockSize\n        transactionCount\n        timestamp {\n          iso8601\n        }\n      }\n    }\n  }\n`;\n\n// Define the transactions query\nconst GET_TRANSACTIONS = gql`\n  query GetTransactions($gteq: Int!, $lteq: Int!) {\n    bitcoin {\n      transactions {\n        block(height: {gteq: $gteq, lteq: $lteq}) {\n          height\n        }\n        feeValue\n        txSize\n      }\n    }\n  }\n`;\n\n// Define the structure of a block and transaction\n\n// Adjust the expected structure of the data to match your queries\n\nconst BlocksComponent = () => {\n  _s();\n  var _dataBlocks$bitcoin$b, _dataBlocks$bitcoin$b2, _dataBlocks$bitcoin;\n  const [currentPage, setCurrentPage] = useState(0);\n  const [dateAfter, setDateAfter] = useState('');\n\n  /*  useEffect(() => {\r\n        setDateAfter(eightHoursAgo());\r\n    }, []);*/\n\n  const {\n    loading: loadingBlocks,\n    error: errorBlocks,\n    data: dataBlocks\n  } = useQuery(GET_BLOCKS, {\n    /*variables: { dateAfter },\r\n    skip: !dateAfter,*/\n  });\n  const [getTransactions, {\n    called,\n    loading: loadingTransactions,\n    data: dataTransactions\n  }] = useLazyQuery(GET_TRANSACTIONS, {\n    fetchPolicy: \"cache-and-network\"\n    /* variables: { dateAfter: selectedDate },*/\n  });\n  const pageCount = dataBlocks ? Math.ceil(dataBlocks.bitcoin.blocks.length / PAGE_SIZE) : 0;\n  const paginatedBlocks = dataBlocks ? dataBlocks.bitcoin.blocks.slice(currentPage * PAGE_SIZE, (currentPage + 1) * PAGE_SIZE) : [];\n  const formatTimestamp = isoString => {\n    // Replace 'T' with a space and remove 'Z'\n    return isoString.replace('T', ' ').replace('Z', '');\n  };\n  const hasPrevPage = currentPage > 0;\n  const hasNextPage = (currentPage + 1) * PAGE_SIZE < ((_dataBlocks$bitcoin$b = dataBlocks === null || dataBlocks === void 0 ? void 0 : dataBlocks.bitcoin.blocks.length) !== null && _dataBlocks$bitcoin$b !== void 0 ? _dataBlocks$bitcoin$b : 0);\n\n  // Navigation functions\n  const goToPrevPage = () => setCurrentPage(currentPage - 1);\n  const goToNextPage = () => setCurrentPage(currentPage + 1);\n  const goToFirstPage = () => setCurrentPage(0);\n\n  // Example of adjusting the date to ISO 8601 format with a time part\n  /*  const handleDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const date = new Date(e.target.value);\r\n        const isoDate = date.toISOString(); // Converts to ISO 8601 format but in UTC\r\n        setSelectedDate(isoDate);\r\n    };*/\n\n  useEffect(() => {\n    // Calculate the range for the current page\n    const startHeightIndex = currentPage * PAGE_SIZE;\n    const endHeightIndex = (currentPage + 1) * PAGE_SIZE;\n\n    // Extract the heights for the current page's blocks\n    const currentHeights = dataBlocks === null || dataBlocks === void 0 ? void 0 : dataBlocks.bitcoin.blocks.slice(startHeightIndex, endHeightIndex).map(block => block.height);\n\n    // Fetch transactions for the current page's blocks\n    if (currentHeights && currentHeights.length > 0) {\n      const minHeight = Math.min(...currentHeights);\n      const maxHeight = Math.max(...currentHeights);\n      getTransactions({\n        variables: {\n          gteq: minHeight,\n          lteq: maxHeight\n        }\n      });\n    }\n  }, [dataBlocks, getTransactions, currentPage]);\n  if (loadingBlocks || !called || loadingTransactions) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading.Please wait...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 65\n  }, this);\n  if (errorBlocks) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", errorBlocks.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 29\n  }, this);\n  //if (errorTransactions) return <p>Error: {errorTransactions.message}</p>;\n\n  //if (!dataTransactions?.bitcoin?.transactions) return <p>No transaction data available</p>;\n\n  if (!dataTransactions || dataTransactions.bitcoin.transactions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No transaction data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 16\n    }, this); // This will show if there is no data.\n  }\n  const mergedData = (_dataBlocks$bitcoin$b2 = dataBlocks === null || dataBlocks === void 0 ? void 0 : (_dataBlocks$bitcoin = dataBlocks.bitcoin) === null || _dataBlocks$bitcoin === void 0 ? void 0 : _dataBlocks$bitcoin.blocks.map(block => {\n    var _dataTransactions$bit, _transactionData$feeV, _transactionData$txSi;\n    const transactionData = dataTransactions === null || dataTransactions === void 0 ? void 0 : (_dataTransactions$bit = dataTransactions.bitcoin) === null || _dataTransactions$bit === void 0 ? void 0 : _dataTransactions$bit.transactions.find(tx => tx.block.height === block.height);\n    return {\n      ...block,\n      feeValue: (_transactionData$feeV = transactionData === null || transactionData === void 0 ? void 0 : transactionData.feeValue) !== null && _transactionData$feeV !== void 0 ? _transactionData$feeV : 'N/A',\n      txSize: (_transactionData$txSi = transactionData === null || transactionData === void 0 ? void 0 : transactionData.txSize) !== null && _transactionData$txSi !== void 0 ? _transactionData$txSi : 'N/A'\n    };\n  })) !== null && _dataBlocks$bitcoin$b2 !== void 0 ? _dataBlocks$bitcoin$b2 : [];\n  const goToPage = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Height\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Block Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Tx count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Fee Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: paginatedBlocks.map((block, index) => {\n          var _dataTransactions$bit2, _transactionData$feeV2, _transactionData$txSi2;\n          const transactionData = dataTransactions === null || dataTransactions === void 0 ? void 0 : (_dataTransactions$bit2 = dataTransactions.bitcoin) === null || _dataTransactions$bit2 === void 0 ? void 0 : _dataTransactions$bit2.transactions.find(tx => tx.block.height === block.height);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tr\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: block.height\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: block.blockSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: block.transactionCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: (_transactionData$feeV2 = transactionData === null || transactionData === void 0 ? void 0 : transactionData.feeValue) !== null && _transactionData$feeV2 !== void 0 ? _transactionData$feeV2 : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: (_transactionData$txSi2 = transactionData === null || transactionData === void 0 ? void 0 : transactionData.txSize) !== null && _transactionData$txSi2 !== void 0 ? _transactionData$txSi2 : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: formatTimestamp(block.timestamp.iso8601)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPrevPage,\n        disabled: !hasPrevPage,\n        className: \"page-item\",\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `page-item ${currentPage === 0 ? 'active' : ''}`,\n        children: currentPage + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextPage,\n        disabled: !hasNextPage,\n        className: \"page-item\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n_s(BlocksComponent, \"p58gRp34484NgdhrQXlQ63gMNik=\", false, function () {\n  return [useQuery, useLazyQuery];\n});\n_c = BlocksComponent;\nexport default BlocksComponent;\nvar _c;\n$RefreshReg$(_c, \"BlocksComponent\");","map":{"version":3,"names":["React","useEffect","useState","useQuery","gql","useLazyQuery","jsxDEV","_jsxDEV","PAGE_SIZE","GET_BLOCKS","GET_TRANSACTIONS","BlocksComponent","_s","_dataBlocks$bitcoin$b","_dataBlocks$bitcoin$b2","_dataBlocks$bitcoin","currentPage","setCurrentPage","dateAfter","setDateAfter","loading","loadingBlocks","error","errorBlocks","data","dataBlocks","getTransactions","called","loadingTransactions","dataTransactions","fetchPolicy","pageCount","Math","ceil","bitcoin","blocks","length","paginatedBlocks","slice","formatTimestamp","isoString","replace","hasPrevPage","hasNextPage","goToPrevPage","goToNextPage","goToFirstPage","startHeightIndex","endHeightIndex","currentHeights","map","block","height","minHeight","min","maxHeight","max","variables","gteq","lteq","children","fileName","_jsxFileName","lineNumber","columnNumber","message","transactions","mergedData","_dataTransactions$bit","_transactionData$feeV","_transactionData$txSi","transactionData","find","tx","feeValue","txSize","goToPage","pageNumber","className","index","_dataTransactions$bit2","_transactionData$feeV2","_transactionData$txSi2","blockSize","transactionCount","timestamp","iso8601","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Manu/Documents/Sushma/crypto/client/src/BlocksComponent.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useQuery, gql, useLazyQuery } from '@apollo/client';\r\nimport './styles.css'\r\n\r\nconst PAGE_SIZE = 20; \r\n\r\n// Function to calculate the datetime string for 8 hours ago\r\n/*const eightHoursAgo = () => {\r\n    const now = new Date(); // Current time\r\n    const eightHoursAgo = new Date(now.getTime() - 8 * 60 * 60 * 1000); // Subtract 8 hours\r\n    return eightHoursAgo.toISOString();\r\n};*/\r\n\r\n// Define the blocks query\r\nconst GET_BLOCKS = gql`\r\n  query GetBlocks {\r\n    bitcoin {\r\n      blocks(date: {between: [\"2024-02-18T00:00:00+0000\", \"2024-02-19T00:00:00+0000\"]}) {\r\n        height\r\n        blockSize\r\n        transactionCount\r\n        timestamp {\r\n          iso8601\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n// Define the transactions query\r\nconst GET_TRANSACTIONS = gql`\r\n  query GetTransactions($gteq: Int!, $lteq: Int!) {\r\n    bitcoin {\r\n      transactions {\r\n        block(height: {gteq: $gteq, lteq: $lteq}) {\r\n          height\r\n        }\r\n        feeValue\r\n        txSize\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\n// Define the structure of a block and transaction\r\ntype Block = {\r\n    height: number;\r\n    blockSize: number;\r\n    transactionCount: number;\r\n    timestamp: {\r\n        iso8601: string;\r\n    };\r\n \r\n};\r\n\r\ntype Transaction = {\r\n    block: { height: number };\r\n    feeValue: number;\r\n    txSize: number;\r\n};\r\n\r\n// Adjust the expected structure of the data to match your queries\r\ntype BlocksData = {\r\n    bitcoin: {\r\n        blocks: Block[];\r\n    };\r\n};\r\n\r\ntype TransactionsData = {\r\n    bitcoin: {\r\n        transactions: Transaction[];\r\n    };\r\n};\r\n\r\ntype MergedBlockData = Block & {\r\n    feeValue?: number | 'N/A';\r\n    txSize?: number | 'N/A';\r\n};\r\n\r\nconst BlocksComponent: React.FC = () => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [dateAfter, setDateAfter] = useState('');\r\n\r\n  /*  useEffect(() => {\r\n        setDateAfter(eightHoursAgo());\r\n    }, []);*/\r\n\r\n  \r\n\r\n    const { loading: loadingBlocks, error: errorBlocks, data: dataBlocks } = useQuery<BlocksData>(GET_BLOCKS, {\r\n        /*variables: { dateAfter },\r\n        skip: !dateAfter,*/\r\n});\r\n    const [getTransactions, { called, loading: loadingTransactions, data: dataTransactions }] = useLazyQuery<TransactionsData>(GET_TRANSACTIONS, {\r\n        fetchPolicy: \"cache-and-network\",\r\n       /* variables: { dateAfter: selectedDate },*/\r\n        \r\n    });\r\n    const pageCount = dataBlocks ? Math.ceil(dataBlocks.bitcoin.blocks.length / PAGE_SIZE) : 0;\r\n\r\n    const paginatedBlocks = dataBlocks ? dataBlocks.bitcoin.blocks.slice(\r\n        currentPage * PAGE_SIZE,\r\n        (currentPage + 1) * PAGE_SIZE\r\n    ) : [];\r\n    const formatTimestamp = (isoString: string) => {\r\n        // Replace 'T' with a space and remove 'Z'\r\n        return isoString.replace('T', ' ').replace('Z', '');\r\n    };\r\n\r\n    const hasPrevPage = currentPage > 0;\r\n    const hasNextPage = (currentPage + 1) * PAGE_SIZE < (dataBlocks?.bitcoin.blocks.length ?? 0);\r\n\r\n    // Navigation functions\r\n    const goToPrevPage = () => setCurrentPage(currentPage - 1);\r\n    const goToNextPage = () => setCurrentPage(currentPage + 1);\r\n    const goToFirstPage = () => setCurrentPage(0);\r\n\r\n    // Example of adjusting the date to ISO 8601 format with a time part\r\n  /*  const handleDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const date = new Date(e.target.value);\r\n        const isoDate = date.toISOString(); // Converts to ISO 8601 format but in UTC\r\n        setSelectedDate(isoDate);\r\n    };*/\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Calculate the range for the current page\r\n        const startHeightIndex = currentPage * PAGE_SIZE;\r\n        const endHeightIndex = (currentPage + 1) * PAGE_SIZE;\r\n\r\n        // Extract the heights for the current page's blocks\r\n        const currentHeights = dataBlocks?.bitcoin.blocks\r\n            .slice(startHeightIndex, endHeightIndex)\r\n            .map(block => block.height);\r\n\r\n        // Fetch transactions for the current page's blocks\r\n        if (currentHeights && currentHeights.length > 0) {\r\n            const minHeight = Math.min(...currentHeights);\r\n            const maxHeight = Math.max(...currentHeights);\r\n\r\n            getTransactions({ variables: { gteq: minHeight, lteq: maxHeight } });\r\n        }\r\n    }, [dataBlocks, getTransactions, currentPage]);\r\n\r\n    if (loadingBlocks || !called || loadingTransactions) return <p>Loading.Please wait...</p>;\r\n    if (errorBlocks) return <p>Error: {errorBlocks.message}</p>;\r\n    //if (errorTransactions) return <p>Error: {errorTransactions.message}</p>;\r\n\r\n    //if (!dataTransactions?.bitcoin?.transactions) return <p>No transaction data available</p>;\r\n\r\n    if (!dataTransactions || dataTransactions.bitcoin.transactions.length === 0) {\r\n        return <p>No transaction data available</p>; // This will show if there is no data.\r\n    }\r\n\r\n    const mergedData: MergedBlockData[] = dataBlocks?.bitcoin?.blocks.map(block => {\r\n        const transactionData = dataTransactions?.bitcoin?.transactions.find(tx => tx.block.height === block.height);\r\n        return {\r\n            ...block,\r\n            feeValue: transactionData?.feeValue ?? 'N/A',\r\n            txSize: transactionData?.txSize ?? 'N/A',\r\n        };\r\n    }) ?? [];\r\n\r\n    const goToPage = (pageNumber: number) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"table-container\">\r\n            {/*<input\r\n                type=\"date\"\r\n                value={selectedDate}\r\n                onChange={(e) => setSelectedDate(e.target.value)}\r\n            />*/}\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"th\">Height</th>\r\n                        <th className=\"th\">Block Size</th>\r\n                        <th className=\"th\">Tx count</th>\r\n                        <th className=\"th\">Fee Value</th>\r\n                        <th className=\"th\">Size</th>\r\n                        <th className=\"th\">Time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {paginatedBlocks.map((block, index) => {\r\n                        const transactionData = dataTransactions?.bitcoin?.transactions.find(tx => tx.block.height === block.height);\r\n                        return (\r\n                            <tr className=\"tr\" key={index}>\r\n                                <td className=\"td\">{block.height}</td>\r\n                                <td className=\"td\">{block.blockSize}</td>\r\n                                <td className=\"td\">{block.transactionCount}</td>\r\n                                <td className=\"td\">{transactionData?.feeValue ?? 'N/A'}</td>\r\n                                <td className=\"td\">{transactionData?.txSize ?? 'N/A'}</td>\r\n                                <td className=\"td\">{formatTimestamp(block.timestamp.iso8601)}</td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            {/* Pagination Controls */}\r\n            {/*<div className=\"pagination\">\r\n                {Array.from({ length: pageCount }, (_, i) => (\r\n                    <button\r\n                        key={i}\r\n                        onClick={() => goToPage(i)}\r\n                        disabled={currentPage === i}\r\n                        className={`page-item ${currentPage === i ? 'active' : ''}`}\r\n                    >\r\n                        {i + 1}\r\n                    </button>\r\n                ))}\r\n            </div>*/}\r\n            <div className=\"pagination\">\r\n                <button\r\n                    onClick={goToPrevPage}\r\n                    disabled={!hasPrevPage}\r\n                    className=\"page-item\"\r\n                >\r\n                    Prev\r\n                </button>\r\n                {/* Middle button dynamically displays the current page */}\r\n                <button\r\n                    className={`page-item ${currentPage === 0 ? 'active' : ''}`}\r\n                >\r\n                    {currentPage + 1}\r\n                </button>\r\n                <button\r\n                    onClick={goToNextPage}\r\n                    disabled={!hasNextPage}\r\n                    className=\"page-item\"\r\n                >\r\n                    Next\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default BlocksComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}