{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Manu/Documents/Sushma/crypto/newclient/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React from'react';import{useQuery,gql}from'@apollo/client';// Define the blocks query\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const GET_BLOCKS=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query GetBlocks {\\n    bitcoin {\\n      blocks(any: {date: {after: \\\"2024-02-18T17:14:50+0000\\\"}}) {\\n        height\\n        blockSize\\n        transactionCount\\n      }\\n    }\\n  }\\n\"])));// Define the transactions query\nconst GET_TRANSACTIONS=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  query GetTransactions {\\n    bitcoin {\\n      transactions {\\n        block(height: {gteq: 831129, lteq: 831129}) {\\n          height\\n        }\\n        feeValue\\n        txSize\\n      }\\n    }\\n  }\\n\"])));// Define the structure of a block and transaction\n// Adjust the expected structure of the data to match your queries\nconst BlocksComponent=()=>{const{loading:loadingBlocks,error:errorBlocks,data:dataBlocks}=useQuery(GET_BLOCKS);const{loading:loadingTransactions,error:errorTransactions,data:dataTransactions}=useQuery(GET_TRANSACTIONS);// Check if either query is loading\nif(loadingBlocks||loadingTransactions)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});// Check if either query has an error\nif(errorBlocks)return/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",errorBlocks.message]});if(errorTransactions)return/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",errorTransactions.message]});// Merge the data from both queries\nconst mergedData=dataBlocks.bitcoin.blocks.map(block=>{// Find the corresponding transaction data\nconst transactionData=dataTransactions.bitcoin.transactions.find(tx=>tx.block.height===block.height);// Return a new object that combines the block and transaction data\nreturn{...block,feeValue:transactionData?transactionData.feeValue:'N/A',// Use 'N/A' or some default value if not found\ntxSize:transactionData?transactionData.txSize:'N/A'};});// Render the merged data in a table\nreturn/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Height\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Block Size\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Transaction Count\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Fee Value\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Transaction Size\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:mergedData.map((item,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.height}),/*#__PURE__*/_jsx(\"td\",{children:item.blockSize}),/*#__PURE__*/_jsx(\"td\",{children:item.transactionCount}),/*#__PURE__*/_jsx(\"td\",{children:item.feeValue}),/*#__PURE__*/_jsx(\"td\",{children:item.txSize})]},index))})]});};export default BlocksComponent;","map":{"version":3,"names":["React","useQuery","gql","jsx","_jsx","jsxs","_jsxs","GET_BLOCKS","_templateObject","_taggedTemplateLiteral","GET_TRANSACTIONS","_templateObject2","BlocksComponent","loading","loadingBlocks","error","errorBlocks","data","dataBlocks","loadingTransactions","errorTransactions","dataTransactions","children","message","mergedData","bitcoin","blocks","map","block","transactionData","transactions","find","tx","height","feeValue","txSize","item","index","blockSize","transactionCount"],"sources":["C:/Users/Manu/Documents/Sushma/crypto/newclient/src/BlocksComponent.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\n// Define the blocks query\r\nconst GET_BLOCKS = gql`\r\n  query GetBlocks {\r\n    bitcoin {\r\n      blocks(any: {date: {after: \"2024-02-18T17:14:50+0000\"}}) {\r\n        height\r\n        blockSize\r\n        transactionCount\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// Define the transactions query\r\nconst GET_TRANSACTIONS = gql`\r\n  query GetTransactions {\r\n    bitcoin {\r\n      transactions {\r\n        block(height: {gteq: 831129, lteq: 831129}) {\r\n          height\r\n        }\r\n        feeValue\r\n        txSize\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// Define the structure of a block and transaction\r\ntype Block = {\r\n    height: number;\r\n    blockSize: number;\r\n    transactionCount: number;\r\n};\r\n\r\ntype Transaction = {\r\n    block: { height: number };\r\n    feeValue: number;\r\n    txSize: number;\r\n};\r\n\r\n// Adjust the expected structure of the data to match your queries\r\ntype BlocksData = {\r\n    bitcoin: {\r\n        blocks: Block[];\r\n    };\r\n};\r\n\r\ntype TransactionsData = {\r\n    bitcoin: {\r\n        transactions: Transaction[];\r\n    };\r\n};\r\n\r\ntype MergedBlockData = Block & {\r\n    feeValue?: number;\r\n    txSize?: number;\r\n};\r\n\r\n\r\nconst BlocksComponent: React.FC = () => {\r\n    const { loading: loadingBlocks, error: errorBlocks, data: dataBlocks } = useQuery(GET_BLOCKS);\r\n    const { loading: loadingTransactions, error: errorTransactions, data: dataTransactions } = useQuery(GET_TRANSACTIONS);\r\n\r\n    // Check if either query is loading\r\n    if (loadingBlocks || loadingTransactions) return <p>Loading...</p>;\r\n\r\n    // Check if either query has an error\r\n    if (errorBlocks) return <p>Error: {errorBlocks.message}</p>;\r\n    if (errorTransactions) return <p>Error: {errorTransactions.message}</p>;\r\n\r\n    // Merge the data from both queries\r\n    const mergedData: MergedBlockData[] = dataBlocks.bitcoin.blocks.map((block: Block) => {\r\n        // Find the corresponding transaction data\r\n        const transactionData = dataTransactions.bitcoin.transactions.find((tx: Transaction) => tx.block.height === block.height);\r\n        // Return a new object that combines the block and transaction data\r\n        return {\r\n            ...block,\r\n            feeValue: transactionData ? transactionData.feeValue : 'N/A', // Use 'N/A' or some default value if not found\r\n            txSize: transactionData ? transactionData.txSize : 'N/A',\r\n        };\r\n    });\r\n\r\n    // Render the merged data in a table\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Height</th>\r\n                    <th>Block Size</th>\r\n                    <th>Transaction Count</th>\r\n                    <th>Fee Value</th>\r\n                    <th>Transaction Size</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {mergedData.map((item: MergedBlockData, index: number) => (\r\n                    <tr key={index}>\r\n                        <td>{item.height}</td>\r\n                        <td>{item.blockSize}</td>\r\n                        <td>{item.transactionCount}</td>\r\n                        <td>{item.feeValue}</td>\r\n                        <td>{item.txSize}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default BlocksComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}